//! ludorum-gamepack 0.1.2

(function(a){"use strict";"function"==typeof define&&define.amd?define(["creatartis-base","sermat","ludorum"],a):"object"==typeof exports&&module.exports?module.exports=a(require("creatartis-base"),require("sermat"),require("ludorum")):this.Sermat=a(this.base,this.Sermat,this.ludorum)}).call(this,function a(b,c,d){"use strict";var e=b.declare,f=b.obj,g=b.copy,h=(b.raise,b.raiseIf),i=b.Iterable,j=b.iterable,k=d.Game,l=d.utils.Checkerboard,m=d.utils.CheckerboardFromString,n=d.players.UserInterface,o={__package__:"ludorum-gamepack",__name__:"ludorum_gamepack",__init__:a,__dependencies__:[b,c,d],__SERMAT__:{include:[b,d]}};o.ConnectFour=e(d.games.ConnectionGame,{name:"ConnectFour",height:6,width:7,lineLength:4,players:["Yellow","Red"],moves:function(){var a=null;if(!this.result()){for(var b=[],c=this.board.string,d=(this.height-1)*this.width,e=0;e<c.length;++e)"."===c.charAt(d+e)&&b.push(e);b.length>0&&(a={},a[this.activePlayer()]=b)}return a},next:function(a,b,c){h(b,"Haps are not required (given ",b,")!");for(var d=this.activePlayer(),e=this.board.string,f=+a[d],g=this.height,i=this.width,j=0;j<g;++j)if("."===e.charAt(j*i+f)){var k=d===this.players[0]?"0":"1";return c?(this.activatePlayers(this.opponent()),this.board.__place__([j,f],k),delete this.__moves__,delete this.__result__,this):new this.constructor(this.opponent(),this.board.place([j,f],k))}throw new Error("Invalid move "+JSON.stringify(a)+"!")},result:function(){for(var a=this.lineLength,b=this.board.asStrings(this.__lines__(this.height,this.width,a)).join(" "),c=0;c<this.players.length;++c)if(b.indexOf(c.toString(36).repeat(a))>=0)return this.victory([this.players[c]]);return b.indexOf(".")<0?this.tied():null},"static __SERMAT__":{identifier:"ConnectFour",serializer:function(a){return d.games.ConnectionGame.__SERMAT__.serializer(a)}}});var p=o.Othello=e(k,{name:"Othello",constructor:function(a,b){if(k.call(this,a),this.board=this.makeBoard.apply(this,b||[]),!this.moves()){var c=this.opponent();this.moves(c)&&(this.activePlayers=[c])}},"dual makeBoard":function(a,b,c){return a=isNaN(a)?8:+a,b=isNaN(b)?8:+b,h(a<4||b<4||a%2||b%2,"An Othello board must have even dimensions greater than 3."),"string"==typeof c?new m(a,b,c):new m(a,b).__place__([a/2,b/2-1],"W").__place__([a/2-1,b/2],"W").__place__([a/2,b/2],"B").__place__([a/2-1,b/2-1],"B")},players:["Black","White"],lines:function(a){return function(b,c){var d=b+"x"+c,e=a[d];return"undefined"==typeof e&&(e=a[d]=new l(b,c).lines().map(function(a){return a.toArray()},function(a){return a.length>2}).toArray()),e}}({}),__MOVE_REGEXPS__:{Black:[/\.W+B/g,/BW+\./g],White:[/\.B+W/g,/WB+\./g]},moves:function(a){if(a=a||this.activePlayer(),this.hasOwnProperty("__moves"+a+"__"))return this["__moves"+a+"__"];var b=this.board,c={},d=this.__MOVE_REGEXPS__[a];this.lines(b.height,b.width).forEach(function(a){d.forEach(function(d){b.asString(a).replace(d,function(b,d){var e="."===b.charAt(0)?a[d]:a[b.length-1+d];return c[e]=e,b})})});var e=[];for(var g in c)e.push(c[g]);return e=e.length>0?f(a,e):null,arguments.length<1?this["__moves"+a+"__"]=e:e},next:function(a,b,c){h(b,"Haps are not required (given ",b,")!");var d,e,f=this.board.clone(),g=this.activePlayer();if(!a.hasOwnProperty(g)||!f.isValidCoord(a[g]))throw new Error("Invalid moves "+JSON.stringify(a)+"!");return g==this.players[0]?(d="B",e=/^W+B/):(d="W",e=/^B+W/),f.walks(a[g],l.DIRECTIONS.EVERY).forEach(function(a){var b=e.exec(f.asString(a).substr(1));b&&a.toArray().slice(0,b[0].length).forEach(function(a){f.__place__(a,d)})}),c?(this.constructor(this.opponent(),[f.height,f.width,f.string]),this):new this.constructor(this.opponent(),[f.height,f.width,f.string])},result:function(){if(this.moves())return null;var a={W:-1,B:1},b=j(this.board.string).map(function(b){return a[b]||0}).sum();return this.zerosumResult(b,"Black")},resultBounds:function(){var a=this.board.width*this.board.height;return[-a,+a]},"static __SERMAT__":{identifier:"Othello",serializer:function(a){return[a.activePlayer(),[a.board.height,a.board.width,a.board.string]]}},"static heuristics":{heuristicFromWeights:function(a){var b=a.length,c=j(a).map(Math.abs).sum(),d=function(d,e){var f=d.board;return h(f.height*f.width!==b,"Wrong amount of weights!"),f.weightedSum(a,{W:"W"===e.charAt(0)?1:-1,B:"B"===e.charAt(0)?1:-1})/c};return d.weights=a,d},heuristicFromSymmetricWeights:function(a,b,c){b=isNaN(b)?8:0|b,c=isNaN(c)?8:0|c;var d=Math.ceil(b/2);return h(d*Math.ceil(c/2)>a.length,"Not enough weights!"),a=i.range(c).map(function(e){var f=e<c/2?e:c-e-1,g=f*d,h=(f+1)*d;return a.slice(g,h).concat(a.slice(g,h-b%2).reverse())}).flatten().toArray(),this.heuristicFromWeights(a)},pieceRatio:function(a,b){var c=0,d=0;return j(a.board.string).forEach(function(a){"."!==a&&(a===b.charAt(0)?++c:++d)}),(c-d)/(c+d)||0},mobilityRatio:function(a,b){var c=a.opponent(b),d=a.moves(b),e=a.moves(c),f=d&&d[b]&&d[b].length||0,g=e&&e[c]&&e[c].length||0;return(f-g)/(f+g)||0}}});p.heuristics.defaultHeuristic=d.players.HeuristicPlayer.composite(p.heuristics.heuristicFromSymmetricWeights([9,-3,3,3,-3,-3,-1,-1,3,-1,1,1,3,-1,1,1]),.6,p.heuristics.pieceRatio,.2,p.heuristics.mobilityRatio,.2),o.Mancala=e(k,{name:"Mancala",constructor:function(a,b){k.call(this,a),this.board=b||this.makeBoard()},makeBoard:function(a,b){a=isNaN(a)?4:+a,b=isNaN(b)?6:+b;for(var c=[],d=0;d<2;d++){for(var e=0;e<b;e++)c.push(a);c.push(0)}return c},players:["North","South"],emptyCapture:!1,countRemainingSeeds:!0,store:function(a){switch(this.players.indexOf(a)){case 0:return this.board.length/2-1;case 1:return this.board.length-1;default:throw new Error("Invalid player "+a+".")}},houses:function(a){switch(this.players.indexOf(a)){case 0:return i.range(0,this.board.length/2-1).toArray();case 1:return i.range(this.board.length/2,this.board.length-1).toArray();default:throw new Error("Invalid player "+a+".")}},oppositeHouse:function(a,b){var c=this.houses(a),d=this.houses(this.opponent(a)),e=c.indexOf(b);return e<0?e:d.reverse()[e]},nextSquare:function(a,b){do b=(b+1)%this.board.length;while(b===this.store(this.opponent(a)));return b},moves:function(){if(this.result())return null;var a=this.board,b={},c=this.activePlayer();return b[c]=this.houses(c).filter(function(b){return a[b]>0}),b[c].length>0?b:null},scores:function(){var a=this,b=this.board,c=this.players.map(function(c){return j(a.houses(c)).map(function(a){return b[a]}).sum()});if(c[0]>0&&c[1]>0)return null;var d={};return this.players.forEach(function(e,f){d[e]=b[a.store(e)]+a.countRemainingSeeds*c[f]}),d},result:function(){var a=this.scores(),b=this.players;return a&&this.zerosumResult(a[b[0]]-a[b[1]],b[0])},next:function(a,b,c){h(b,"Haps are not required (given ",b,")!");var d,e,f=this.activePlayer(),g=+a[f],i=this.board.slice(0),j=i[g],k=!1;for(h(j<1,"Invalid move ",g," for game ",this),i[g]=0;j>0;j--)g=this.nextSquare(f,g),i[g]++;k=g==this.store(f),k||(e=this.oppositeHouse(f,g),e>=0&&1==i[g]&&i[e]>0&&(d=this.store(f),i[d]++,i[g]=0,this.emptyCapture||(i[d]+=i[e],i[e]=0)));var l=k?f:this.opponent();return c?(this.activatePlayers(l),this.board=i,this):new this.constructor(l,i)},resultBounds:function(){var a=j(this.board).sum();return[-a,+a]},"static __SERMAT__":{identifier:"Mancala",serializer:function(a){return[a.activePlayer(),a.board]}},identifier:function(){return this.activePlayer().charAt(0)+this.board.map(function(a){return("00"+a.toString(36)).substr(-2)}).join("")},printBoard:function(){var a=this,c=b.Text.lpad,d=this.players[0],e=this.houses(d).map(function(b){return c(""+a.board[b],2,"0")}).reverse(),f=c(""+this.board[this.store(d)],2,"0"),g=this.players[1],h=this.houses(g).map(function(b){return c(""+a.board[b],2,"0")}),i=c(""+this.board[this.store(g)],2,"0");return"   "+e.join(" | ")+"   \n"+f+" ".repeat(2*e.length+3*(e.length-1)+2)+i+"\n   "+h.join(" | ")+"   "},"static heuristics":{heuristicFromWeights:function(a){function b(b,d){var e,f=0;switch(b.players.indexOf(d)){case 0:e=1;break;case 1:e=-1;break;default:throw new Error("Invalid player "+d+".")}return j(b.board).map(function(b,c){return f+=b,b*a[c]}).sum()/c/f*e}var c=j(a).map(Math.abs).sum();return b.weights=a,b}},"":function(){this.makeBoard=this.prototype.makeBoard,this.heuristics.defaultHeuristic=this.heuristics.heuristicFromWeights([1,1,1,1,1,1,5,-1,-1,-1,-1,-1,-1,-5])}}),o.Colograph=e(k,{name:"Colograph",constructor:function(a){k.call(this,a?a.activePlayer:void 0),b.initialize(this,a).object("colours",{defaultValue:{}}).array("edges",{defaultValue:[[1,3],[2],[3],[]]}).array("shapes",{defaultValue:["circle","triangle","square","star"]}).number("scoreSameShape",{defaultValue:-1,coerce:!0}).number("scoreDifferentShape",{defaultValue:-1,coerce:!0})},players:["Red","Blue"],score:function(){var a={},b=this.shapes,c=this.colours,d=this.scoreSameShape,e=this.scoreDifferentShape,f=this.edges.length;return this.players.forEach(function(b){a[b]=f}),j(this.edges).forEach(function(f,g){f.forEach(function(f){var h=g+","+f;c.hasOwnProperty(h)&&(a[c[h]]+=b[g]===b[f]?d:e)})}),a},result:function(){if(this.moves())return null;var a=this.score(),b=this.players;return this.zerosumResult(a[b[0]]-a[b[1]],b[0])},moves:function(){for(var a=(this.colours,[]),b=0;b<this.edges.length;b++)this.colours.hasOwnProperty(b)||a.push(b);return a.length<1?null:f(this.activePlayer(),a)},next:function(a,b,c){h(b,"Haps are not required (given ",b,")!");var d=this.activePlayer(),e=+a[d]>>0;h(e<0||e>=this.colours.length,"Invalid move: node ",e," does not exist in ",this,"."),h(this.colours[e]>=0,"Invalid move: node ",e," has already been coloured in ",this,".");var i=g(f(e,d),this.colours);this.edges[e].forEach(function(a){i[a]===d&&(i[e+","+a]=d)}),this.edges.forEach(function(a,b){b!==e&&a.indexOf(e)>=0&&i[b]===d&&(i[b+","+e]=d)});var j={activePlayer:this.opponent(d),colours:i,edges:this.edges,shapes:this.shapes,scoreSameShape:this.scoreSameShape,scoreDifferentShape:this.scoreDifferentShape};return c?(this.constructor(j),this):new this.constructor(j)},"static __SERMAT__":{identifier:"Colograph",serializer:function(a){return[{activePlayer:a.activePlayer(),colours:a.colours,edges:a.edges,shapes:a.shapes,scoreSameShape:a.scoreSameShape,scoreDifferentShape:a.scoreDifferentShape}]}},edgeColour:function(a,b){var c=this.edges[a].indexOf(b)>=0||this.edges[b].indexOf(a)>=0,d=this.colours[a],e=this.colours[b];return c&&d>=0&&d===e?d:-1},"static heuristics":{scoreDifference:function(a,b){var c=a.score(),d=0;for(var e in c)d+=e===b?c[e]:-c[e];return d/a.edges.length/2}},"static randomGraph":function(a,b,c){a=Math.max(2,+a>>0),b=Math.max(a-1,+b>>0);for(var d,e,f=basis.iterables.range(a-1).map(function(b){return c.split(1,basis.iterables.range(b+1,a).toArray())}).toArray(),g=b-(a-1);g>0;g--)d=c.choice(f),d[1].length>0&&(e=c.split(1,d[1]),d[0].push(e[0][0]),d[1]=e[1],g--);return f=f.map(function(a){return a[0]}),f.push([]),f},"static randomGame":function(a){params=b.initialize({},params).object("random",{defaultValue:randomness.DEFAULT}).integer("nodeCount",{defaultValue:8,coerce:!0}).integer("edgeCount",{defaultValue:11,coerce:!0}).integer("shapeCount",{defaultValue:4,coerce:!0,minimum:1,maximum:4}).subject;var c=["circle","triangle","square","star"];return new Colograph({edges:this.randomGraph(params.nodeCount,params.edgeCount,params.random),shapes:params.random.randoms(params.nodeCount,0,params.shapeCount).map(function(a){return c[0|a]}),scoreSameShape:1})},"static KineticUI":e(n,{constructor:function(a){n.call(this,a),initialize(this,a).string("container",{defaultValue:"colograph-container"}).object("Kinetic",{defaultValue:window.Kinetic}).integer("canvasRadius",{defaultValue:NaN,coerce:!0}).integer("nodeRadius",{defaultValue:15,coerce:!0}).array("playerColours",{defaultValue:["red","blue"]}),isNaN(this.canvasRadius)&&(this.canvasRadius=.6*Math.min(screen.width,screen.height)>>1);var b=this.stage=new Kinetic.Stage({container:this.container,width:2*this.canvasRadius,height:2*this.canvasRadius}),c=this.layer=new Kinetic.Layer({clearBeforeDraw:!0,offsetX:-this.canvasRadius,offsetY:-this.canvasRadius}),d=this.match.state();b.add(c),setInterval(b.draw.bind(b),1e3/30),c.destroyChildren(),this.edges={},this.nodes={},this.drawEdges(d),this.drawNodes(d)},drawEdges:function(a){var b=2*Math.PI/a.edges.length,c=this.canvasRadius-2*this.nodeRadius,d=this;a.edges.forEach(function(a,e){a.forEach(function(a){var f=new d.Kinetic.Line({points:[c*Math.cos(b*e),c*Math.sin(b*e),c*Math.cos(b*a),c*Math.sin(b*a)],stroke:"black",strokeWidth:2});d.edges[e+","+a]=f,d.layer.add(f)})})},drawNodes:function(a){var b=2*Math.PI/a.edges.length,c=this.canvasRadius-2*this.nodeRadius,d=this;a.edges.forEach(function(e,f){var g,h=c*Math.cos(b*f),i=c*Math.sin(b*f);switch(a.shapes[f]){case"square":g=d.drawSquare(h,i,d.nodeRadius,f);break;case"triangle":g=d.drawTriangle(h,i,d.nodeRadius,f);break;case"star":g=d.drawStar(h,i,d.nodeRadius,f);break;default:g=d.drawCircle(h,i,d.nodeRadius,f)}g.on("mouseover",function(){g.setScale(1.2)}),g.on("mouseout",function(){g.setScale(1)}),g.on("click tap",function(){d.perform(f)}),g.setRotation(2*Math.random()*Math.PI),d.nodes[f]=g,d.layer.add(g)})},drawCircle:function(a,b,c,d){return new this.Kinetic.Circle({x:a,y:b,radius:c,fill:"white",stroke:"black",strokeWidth:2})},drawSquare:function(a,b,c,d){return new this.Kinetic.Rect({x:a,y:b,width:2*c,height:2*c,offsetX:c,offsetY:c,fill:"white",stroke:"black",strokeWidth:2})},drawStar:function(a,b,c,d){return new Kinetic.Star({numPoints:5,x:a,y:b,innerRadius:.6*c,outerRadius:1.5*c,fill:"white",stroke:"black",strokeWidth:2})},drawTriangle:function(a,b,c,d){return new Kinetic.RegularPolygon({sides:3,x:a,y:b,radius:1.25*c,fill:"white",stroke:"black",strokeWidth:2})},display:function(a){this.updateEdges(a),this.updateNodes(a)},updateEdges:function(a){var b=this;a.edges.forEach(function(c,d){c.forEach(function(c){var e=d+","+c;b.edges[e].setStroke(a.colours[e]||"black")})})},updateNodes:function(a){var b=this;a.edges.forEach(function(c,d){var e=a.colours[d];e&&(b.nodes[d].setFill(e),b.nodes[d].off("mouseover mouseout click tap"))})}})});var q=e({constructor:function(a,b){this.player=a,this.position=b},moves:b.objects.unimplemented("Piece","moves(game, board)"),canMove:b.objects.unimplemented("Piece","canMove(game, board, position)"),moveTo:function(a){return new this.constructor(this.player,a)},next:function(a,b,c){return b.clone().__place__(c[1]).__place__(c[2],this.moveTo(c[2]))}}),r=o.Chess=e(k,{name:"Chess",players:["White","Black"],constructor:function s(a){a=a||{},k.call(this,a.activePlayer||this.players[0]),this.board=a.board?"string"==typeof a.board?s.boardFromFEN(a.board):a.board:this.initialBoard,this.castling=a.castling||"KQkq",this.enPassant=a.enPassant,this.halfMoves=0|a.halfMoves,this.fullMoves=Math.max(0|a.fullMoves,1);var b=this;this.pieces=j(this.players).map(function(a){return[a,j(b.kinds).mapApply(function(a,b){return[a,[]]}).toObject()]}).toObject(),j(this.board.pieces).forEachApply(function(a,c){b.pieces[c.player][c.name].push(c)})},"dual kinds":{Pawn:e(q,{name:"Pawn",moves:function(a,b){var c=this,d=this.player===a.players[0]?-1:1,e=[],f=[this.position[0]+d,this.position[1]];if(b.square(f)||e.push(f),[[d,-1],[d,1]].map(function(a){return[c.position[0]+a[0],c.position[1]+a[1]]}).forEach(function(a){if(b.isValidCoord(a)){var d=b.square(a);d&&d.player!==c.player&&e.push(a)}}),this.position[0]===(d>0?1:b.height-2)&&(f=[this.position[0]+2*d,this.position[1]],b.square(f)||e.push(f)),this.position[0]===(d<0?1:b.height-2)){var g=["Knight","Bishop","Rook","Queen"];return j(e).map(function(a){return g.map(function(b){return["promote",c.position,a,b]})}).flatten()}return j(e).map(function(a){return["move",c.position,a]})},next:function(a,b,c){return"move"===c[0]?q.prototype.next.call(this,a,b,c):b.clone().__place__(c[1]).__place__(c[2],new r.kinds[c[3]](this.player,c[2]))},toString:function(){return"White"===this.player?"P":"p"}}),Knight:e(q,{name:"Knight",DELTAS:[[2,1],[1,2],[2,-1],[-1,2],[-2,-1],[-1,-2],[-2,1],[1,-2]],moves:function(a,b){var c=this;return j(this.DELTAS).map(function(a){return["move",c.position,[c.position[0]+a[0],c.position[1]+a[1]]]},function(a){if(b.isValidCoord(a[2])){var d=b.square(a[2]);return!d||d.player!==c.player}return!1})},toString:function(){return"White"===this.player?"N":"n"}}),Bishop:e(q,{name:"Bishop",moves:function(a,b){var c=this;return j(b.walks(this.position,l.DIRECTIONS.DIAGONAL)).map(function(a){var d=!0;return a.tail().takeWhile(function(a){var e=b.square(a),f=d&&(!e||e.player!==c.player);return d=d&&!e,f}).map(function(a){return["move",c.position,a]})}).flatten()},next:function(a,b,c){return b.clone().__place__(c[1]).__place__(c[2],new this.constructor(this.player,c[2]))},toString:function(){return"White"===this.player?"B":"b"}}),Rook:e(q,{name:"Rook",moves:function(a,b){var c=this;return j(b.walks(this.position,l.DIRECTIONS.ORTHOGONAL)).map(function(a){var d=!0;return a.tail().takeWhile(function(a){var e=b.square(a),f=d&&(!e||e.player!==c.player);return d=d&&!e,f}).map(function(a){return["move",c.position,a]})}).flatten()},toString:function(){return"White"===this.player?"R":"r"}}),Queen:e(q,{name:"Queen",moves:function(a,b){var c=this;return j(b.walks(this.position,l.DIRECTIONS.EVERY)).map(function(a){var d=!0;return a.tail().takeWhile(function(a){var e=b.square(a),f=d&&(!e||e.player!==c.player);return d=d&&!e,f}).map(function(a){return["move",c.position,a]})}).flatten()},toString:function(){return"White"===this.player?"Q":"q"}}),King:e(q,{name:"King",moves:function(a,b){var c=this;return j(l.DIRECTIONS.EVERY).map(function(a){return["move",c.position,[c.position[0]+a[0],c.position[1]+a[1]]]},function(a){if(b.isValidCoord(a[2])){var d=b.square(a[2]);return!d||d.player!==c.player}return!1})},canMove:function(a,b,c){if(b.isValidCoord(c)&&1===Math.abs(this.position[0]-c[0])!=(1===Math.abs(this.position[1]-c[1]))){var d=b.square(c);return!d||d.player!==this.player}return!1},toString:function(){return"White"===this.player?"K":"k"}})},moves:function(){if(!this.hasOwnProperty("__moves__")){var a=this,c=this.board,d=this.activePlayer();this.pieces[d].King[0];if(this.checkMoves=[],!(this.checkMoves.length<1))throw new Error("Do not know what to do when in check!");this.__moves__=b.obj(d,j(this.pieces[d]).mapApply(function(a,b){return b}).flatten().map(function(b){return b.moves(a,c)}).flatten().toArray())}return this.__moves__},next:function(a,b,c){h(b,"Haps are not required (given ",b,")!");var d=this.activePlayer(),e=a[d],f=this.board.square(e[1]),g={activePlayer:this.opponent(),board:f.next(this,this.board,e),castling:this.castling,enPassant:null,halfMoves:this.halfMoves,fullMoves:this.fullMoves+("Black"===d?1:0)};return c?(this.constructor(g),this):new this.constructor(g)},result:function(){return this.moves()[this.activePlayer()]?null:this.checkMoves.length>0?this.defeat():this.draw()},"static __SERMAT__":{identifier:"Chess",serializer:function(a){return[a.toFEN()]},materializer:function(a,b){return b?r.fromFEN(b[0]):null}},"dual coordFromString":function(a){return[+a.charAt(1)+1,a.charCodeAt(0)-"a".charCodeAt(0)]},"dual coordToString":function(a){return String.fromCharCode("a".charCodeAt(0)+a[1])+(a[0]+1)},toString:function(){return this.toFEN()},toFEN:function(){var a=this.board,b=a.horizontals().map(function(b){var c="",d=0;return b.forEach(function(b){var e=a.square(b);e?(d>0&&(c+=d,d=0),c+=e.toString()):d++}),d>0&&(c+=d),c}).join("/");return b+=" "+this.activePlayer().charAt(0).toLowerCase(),b+=" "+this.castling,b+=" "+(this.enPassant?this.coordToString(this.enPassant):"-"),b+=" "+this.halfMoves+" "+this.fullMoves},"static fromFEN":function(a){a=a.trim();var b=this.FEN_REGEXP.exec(a);return h(!b,"Invalid FEN string '",a,"'!"),new this({board:this.boardFromFEN(b[1]),activePlayer:"w"===b[2]?"White":"Black",castling:"-"===b[3]?"":b[3],enPassant:"-"===b[4]?null:this.coordFromString(b[4]),halfMoves:+b[5],fullMoves:+b[6]})},"static FEN_REGEXP":/^((?:[pnbrqkPNBRQK12345678]+\/){7}[pnbrqkPNBRQK12345678]+)\s+([wb])\s+(-|[KQkq]+)\s+(-|[a-h][1-8])\s+(\d+)\s+(\d+)$/,"dual boardFromFEN":function(a){var b=a.split("/"),c={p:this.kinds.Pawn,n:this.kinds.Knight,b:this.kinds.Bishop,r:this.kinds.Rook,q:this.kinds.Queen,k:this.kinds.King},e=[];return b.forEach(function(a,b){var d=0;j(a).forEach(function(a){isNaN(a)?(e.push(new(c[a.toLowerCase()])(a===a.toLowerCase()?"Black":"White",[b,d])),d++):d+=0|a})}),new d.utils.CheckerboardFromPieces(8,8,e)},"static heuristics":{}});return r.initialBoard=r.prototype.initialBoard=r.boardFromFEN("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR"),"Chess Colograph ConnectFour Mancala Othello".split(/\s+/).forEach(function(a){var b=o[a];d.games[a]=b,b.__SERMAT__&&(b.__SERMAT__.identifier=o.__package__+"."+b.__SERMAT__.identifier,o.__SERMAT__.include.push(b))}),c.include(o),o});
//# sourceMappingURL=ludorum-gamepack.min.js.map