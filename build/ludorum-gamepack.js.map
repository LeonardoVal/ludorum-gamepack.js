{"version":3,"sources":["../src/__prologue__.js","../src/ConnectFour.js","../src/Othello.js","../src/Mancala.js","../src/Colograph.js","../src/Chess.js","../src/__epilogue__.js"],"names":[],"mappings":"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","file":"ludorum-gamepack.js","sourcesContent":["/** Package wrapper and layout.\n*/\n(function (global, init) { \"use strict\"; // Universal Module Definition.\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['creatartis-base', 'sermat', 'ludorum'], init); // AMD module.\n\t} else if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = init(require('creatartis-base'), require('sermat'), require('ludorum')); // CommonJS module.\n\t} else { // Browser or web worker (probably).\n\t\tglobal.ludorum_gamepack = init(global.base, global.ludorum); // Assumes base is loaded.\n\t}\n})(this, function __init__(base, Sermat, ludorum) { \"use strict\";\n// Import synonyms. ////////////////////////////////////////////////////////////////////////////////\n\tvar declare = base.declare,\n\t\tobj = base.obj,\n\t\tcopy = base.copy,\n\t\traise = base.raise,\n\t\traiseIf = base.raiseIf,\n\t\tIterable = base.Iterable,\n\t\titerable = base.iterable,\n\t\tGame = ludorum.Game,\n\t\tCheckerboard = ludorum.utils.Checkerboard,\n\t\tCheckerboardFromString = ludorum.utils.CheckerboardFromString,\n\t\tUserInterface = ludorum.players.UserInterface;\n\n// Library layout. /////////////////////////////////////////////////////////////////////////////////\n\tvar exports = {\n\t\t__package__: 'ludorum-gamepack',\n\t\t__name__: 'ludorum_gamepack',\n\t\t__init__: __init__,\n\t\t__dependencies__: [base, Sermat, ludorum],\n\t\t__SERMAT__: { include: [base, ludorum] }\n\t};","/** # ConnectFour.\n\nImplementation of the [Connect Four game](http://en.wikipedia.org/wiki/Connect_Four), based on\nLudorum's `ConnectionGame`.\n*/\nexports.ConnectFour = declare(ludorum.games.ConnectionGame, {\n\tname: 'ConnectFour',\n\n\t/** The default `height` of the board is 6 ...\n\t*/\n\theight: 6,\n\t\n\t/** ... and the default `width` of the board is 7.\n\t*/\n\twidth: 7,\n\t\n\t/** The default `lineLength` to win the game is 4.\n\t*/\n\tlineLength: 4,\n\t\n\t/** The game's players are Yellow and Red, since these are the classic colours of the pieces.\n\t*/\n\tplayers: ['Yellow', 'Red'],\n\t\n\t/** The active players `moves()` are the indexes of every column that has not reached the top \n\theight.\n\t*/\n\tmoves: function moves() {\n\t\tvar result = null;\n\t\tif (!this.result()) {\n\t\t\tvar ms = [],\n\t\t\t\tboard = this.board.string,\n\t\t\t\toffset = (this.height - 1) * this.width;\n\t\t\tfor (var i = 0; i < board.length; ++i) {\n\t\t\t\tif (board.charAt(offset + i) === '.') {\n\t\t\t\t\tms.push(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ms.length > 0) {\n\t\t\t\tresult = {};\n\t\t\t\tresult[this.activePlayer()] = ms;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t},\n\n\t/** The `next(moves)` game state drops a piece at the column with the index of the active \n\tplayer's move.\n\t*/\n\tnext: function next(moves) {\n\t\tvar activePlayer = this.activePlayer(),\n\t\t\tboard = this.board.string,\n\t\t\tcolumn = +moves[activePlayer],\n\t\t\theight = this.height,\n\t\t\twidth = this.width;\n\t\tfor (var row = 0; row < height; ++row) {\n\t\t\tif (board.charAt(row * width + column) === '.') {\n\t\t\t\treturn new this.constructor(this.opponent(), \n\t\t\t\t\tthis.board.place([row, column], activePlayer === this.players[0] ? '0' : '1'));\n\t\t\t}\n\t\t}\n\t\tthrow new Error('Invalid move '+ JSON.stringify(moves) +'!');\n\t},\n\t\n\t// ## Utility methods ##########################################################################\n\t\n\t/** Serialization is delegated to the serializer of the parent class.\n\t*/\n\t'static __SERMAT__': {\n\t\tidentifier: 'ConnectFour',\n\t\tserializer: function serialize_ConnectFour(obj) {\n\t\t\treturn ludorum.games.ConnectionGame.__SERMAT__.serializer(obj);\n\t\t}\n\t},\n}); // declare ConnectFour.","/** # Othello\n\nImplementation of [Othello (aka Reversi)](http://en.wikipedia.org/wiki/Reversi) for Ludorum.\n*/\nvar Othello = exports.Othello = declare(Game, {\n\tname: 'Othello',\n\n\t/** The constructor takes the `activePlayer` (`\"Black\"` by default) and a board (initial board \n\tby default). The board is represented by an array of two integers and a string: \n\t`[rows, columns, string]`. The string must have:\n\t\n\t+ `'W'` for every square occupied by a white piece.\n\t+ `'B'` for every square occupied by a black piece.\n\t+ `'.'` for every empty square.\n\t*/\n\tconstructor: function Othello(activePlayer, board){\n\t\tGame.call(this, activePlayer);\n\t\tthis.board = this.makeBoard.apply(this, board || []);\n\t\tif (!this.moves()) {\n\t\t\tvar opponent = this.opponent();\n\t\t\tif (this.moves(opponent)) {\n\t\t\t\tthis.activePlayers = [opponent];\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/** `makeBoard(rows=8, columns=8, string)` is used to build the initial board.\n\t*/\n\t'dual makeBoard': function makeBoard(rows, columns, string){\n\t\trows = isNaN(rows) ? 8 : +rows;\n\t\tcolumns = isNaN(columns) ? 8 : +columns;\n\t\traiseIf(rows < 4 || columns < 4 || rows % 2 || columns % 2, \"An Othello board must have even dimensions greater than 3.\");\n\t\tif (typeof string === 'string') {\n\t\t\treturn new CheckerboardFromString(rows, columns, string);\n\t\t} else {\n\t\t\treturn new CheckerboardFromString(rows, columns)\n\t\t\t\t.__place__([rows / 2, columns / 2 - 1], \"W\")\n\t\t\t\t.__place__([rows / 2 - 1, columns / 2], \"W\")\n\t\t\t\t.__place__([rows / 2, columns / 2], \"B\")\n\t\t\t\t.__place__([rows / 2 - 1, columns / 2 - 1], \"B\");\n\t\t}\n\t},\n\t\n\t/** The game is played by two players: Black and White. Black moves first.\n\t*/\n\tplayers: [\"Black\", \"White\"],\n\t\n\t/** Much of the move calculations are based on the possible lines in the board. These are \n\tcalculated and cached by the `lines(rows, cols)` function.\n\t*/\n\tlines: (function (cache) {\n\t\treturn function lines(rows, cols) {\n\t\t\tvar key = rows +'x'+ cols,\n\t\t\t\tresult = cache[key];\n\t\t\tif (typeof result === 'undefined') {\n\t\t\t\tresult = cache[key] = new Checkerboard(rows, cols).lines().map(function(line) { \n\t\t\t\t\treturn line.toArray();\n\t\t\t\t}, function(line){\n\t\t\t\t\treturn line.length > 2;\n\t\t\t\t}).toArray();\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t})({}),\n\t\n\t/** Another optimization in the move logic uses regular expressions to match patterns in the \n\tboard. These are predefined as a _class_ member.\n\t*/\n\t__MOVE_REGEXPS__: {\n\t\t\"Black\": [/\\.W+B/g, /BW+\\./g],\n\t\t\"White\": [/\\.B+W/g, /WB+\\./g]\n\t},\n\t\n\t/** A move always places a piece in an empty square, if and only if by doing so one or more \n\tlines of the opponent's pieces get enclosed between pieces of the active player.\n\t*/\n\tmoves: function moves(player){\n\t\tplayer = player || this.activePlayer();\n\t\tif (this.hasOwnProperty('__moves'+ player +'__')) {\n\t\t\treturn this['__moves'+ player +'__'];\n\t\t}\n\t\tvar board = this.board,\n\t\t\tcoords = {},\n\t\t\tregexps = this.__MOVE_REGEXPS__[player];\n\t\tthis.lines(board.height, board.width).forEach(function(line){\n\t\t\tregexps.forEach(function (regexp) {\n\t\t\t\tboard.asString(line).replace(regexp, function(m, i){\n\t\t\t\t\tvar coord = m.charAt(0) === \".\" ? line[i] : line[m.length - 1 + i];\n\t\t\t\t\tcoords[coord] = coord;\n\t\t\t\t\treturn m;\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\tvar _moves = [];\n\t\tfor (var id in coords) {\n\t\t\t_moves.push(coords[id]);\n\t\t}\n\t\t_moves = _moves.length > 0 ? obj(player, _moves) : null;\n\t\tif (arguments.length < 1) {\n\t\t\treturn this['__moves'+ player +'__'] = _moves; // Cache the result.\n\t\t}\n\t\treturn _moves;\n\t},\n\t\n\t/** When the active player encloses one or more lines of opponent's pieces between two of its \n\town, all those are turned into active player's pieces.\n\t*/\n\tnext: function next(moves) {\n\t\tvar board = this.board.clone(),\n\t\t\tactivePlayer = this.activePlayer(),\n\t\t\tpiece, valid;\n\t\tif (!moves.hasOwnProperty(activePlayer) || !board.isValidCoord(moves[activePlayer])) {\n\t\t\tthrow new Error(\"Invalid moves \"+ JSON.stringify(moves) +\"!\");\n\t\t} else if (activePlayer == this.players[0]) {\n\t\t\tpiece = \"B\";\n\t\t\tvalid = /^W+B/;\n\t\t} else {\n\t\t\tpiece = \"W\";\n\t\t\tvalid = /^B+W/;\n\t\t}\n\t\tboard.walks(moves[activePlayer], Checkerboard.DIRECTIONS.EVERY).forEach(function (walk){\n\t\t\tvar match = valid.exec(board.asString(walk).substr(1));\n\t\t\tif (match){\n\t\t\t\twalk.toArray().slice(0, match[0].length).forEach(function(coord){\n\t\t\t\t\tboard.__place__(coord, piece);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn new this.constructor(this.opponent(), [board.height, board.width, board.string]);\n\t},\n\t\n\t/** A match ends when the active player cannot move. The winner is the one with more pieces of \n\tits color in the board at the end.\n\t*/\n\tresult: function result() {\n\t\tif (this.moves()) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tvar weight = {\"W\": -1, \"B\": 1},\n\t\t\t\tres_b = iterable(this.board.string).map(function(m){\n\t\t\t\t\treturn weight[m] || 0;\n\t\t\t\t}).sum();\n\t\t\treturn this.zerosumResult(res_b, \"Black\");\n\t\t}\n\t},\n\t\n\t/** The actual score is calculated as the difference in piece count. This means that the maximum \n\tvictory (maybe impossible) is to fill the board with pieces of only one colour.\n\t*/\n\tresultBounds: function resultBounds() {\n\t\tvar squareCount = this.board.width * this.board.height;\n\t\treturn [-squareCount, +squareCount];\n\t},\n\t\n\t// ## Utility methods ##########################################################################\n\t\n\t/** The game state serialization simply contains the constructor arguments.\n\t*/\n\t'static __SERMAT__': {\n\t\tidentifier: 'Othello',\n\t\tserializer: function serialize_Othello(obj) {\n\t\t\treturn [obj.activePlayer(), [obj.board.height, obj.board.width, obj.board.string]];\n\t\t}\n\t},\n\t\n\t// ## Heuristics ###############################################################################\n\t\n\t/** `Othello.heuristics` is a bundle of helper functions to build heuristic evaluation functions \n\tfor this game.\n\t*/\n\t'static heuristics': {\n\t\t/** `heuristicFromWeights(weights)` returns an heuristic function that may be used with any \n\t\theuristic based player. Weights are normalized, so the result is in (-1,+1) (exclusively).\n\t\t*/\n\t\theuristicFromWeights: function heuristicFromWeights(weights) {\n\t\t\tvar weightCount = weights.length,\n\t\t\t\tweightSum = iterable(weights).map(Math.abs).sum(); // Used to normalize the sum.\n\t\t\tvar heuristic = function __heuristic__(game, player) {\n\t\t\t\tvar board = game.board;\n\t\t\t\traiseIf(board.height * board.width !== weightCount, \"Wrong amount of weights!\");\n\t\t\t\treturn board.weightedSum(weights, {\n\t\t\t\t\t'W': player.charAt(0) === 'W' ? 1 : -1,\n\t\t\t\t\t'B': player.charAt(0) === 'B' ? 1 : -1\n\t\t\t\t}) / weightSum;\n\t\t\t};\n\t\t\theuristic.weights = weights;\n\t\t\treturn heuristic;\n\t\t},\n\t\t\n\t\t/** `heuristicFromSymmetricWeights(weights)` is similar to `heuristicFromWeights()` but \n\t\tinstead of demanding a weight for every square in the board, it uses only the upper left \n\t\tquadrant and builds the rest by symmetry. Hence only a quarter of the weights is required.\n\t\t*/\n\t\theuristicFromSymmetricWeights: function heuristicFromSymmetricWeights(weights, rows, columns) {\n\t\t\trows = isNaN(rows) ? 8 : rows | 0;\n\t\t\tcolumns = isNaN(columns) ? 8 : columns | 0;\n\t\t\tvar width = Math.ceil(rows / 2);\n\t\t\traiseIf(width * Math.ceil(columns / 2) > weights.length, \"Not enough weights!\");\n\t\t\tweights = Iterable.range(columns).map(function (column) {\n\t\t\t\tvar i = column < columns / 2 ? column : columns - column - 1,\n\t\t\t\t\tleft = i * width,\n\t\t\t\t\tright = (i + 1) * width;\n\t\t\t\treturn weights.slice(left, right)\n\t\t\t\t\t.concat(weights.slice(left, right - rows % 2).reverse());\n\t\t\t}).flatten().toArray();\n\t\t\treturn this.heuristicFromWeights(weights);\n\t\t},\n\t\t\n\t\t/** `pieceRatio(game, player)` is an heuristic criteria based on the difference of the piece \n\t\tcounts of both players.\n\t\t*/\n\t\tpieceRatio: function pieceRatio(game, player) {\n\t\t\tvar playerPieceCount = 0, opponentPieceCount = 0;\n\t\t\titerable(game.board.string).forEach(function (sq) {\n\t\t\t\tif (sq !== '.') {\n\t\t\t\t\tif (sq === player.charAt(0)) {\n\t\t\t\t\t\t++playerPieceCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t++opponentPieceCount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn (playerPieceCount - opponentPieceCount) / (playerPieceCount + opponentPieceCount) || 0;\n\t\t},\n\t\t\n\t\t/** `mobilityRatio(game, player)` is an heuristic criteria based on the difference of the \n\t\tmove counts of both players.\n\t\t*/\n\t\tmobilityRatio: function mobilityRatio(game, player) {\n\t\t\tvar opponent = game.opponent(player),\n\t\t\t\tplayerMoves = game.moves(player),\n\t\t\t\topponentMoves = game.moves(opponent), \n\t\t\t\tplayerMoveCount = playerMoves && playerMoves[player] && playerMoves[player].length || 0, \n\t\t\t\topponentMoveCount = opponentMoves && opponentMoves[opponent] && opponentMoves[opponent].length || 0;\n\t\t\treturn (playerMoveCount - opponentMoveCount) / (playerMoveCount + opponentMoveCount) || 0;\n\t\t}\n\t}\t\n}); // declare Othello.\n\n/** The default heuristic combines piece and mobility ratios with weights that ponder corners and \nborders but penalizes the squares next to the corners.\n*/\nOthello.heuristics.defaultHeuristic = ludorum.players.HeuristicPlayer.composite(\n\tOthello.heuristics.heuristicFromSymmetricWeights(\n\t\t[+9,-3,+3,+3, -3,-3,-1,-1, +3,-1,+1,+1, +3,-1,+1,+1]\n\t), 0.6,\n\tOthello.heuristics.pieceRatio, 0.2,\n\tOthello.heuristics.mobilityRatio, 0.2\n);","/** # Mancala\n\nImplementation of the [Kalah](http://en.wikipedia.org/wiki/Kalah) member of the \n[Mancala family of games](http://en.wikipedia.org/wiki/Mancala).\n*/\nexports.Mancala = declare(Game, {\n\tname: 'Mancala',\n\t\n\t/** The constructor takes the `activePlayer` (`\"North\"` by default) and the board as an array of\n\tintegers (initial board by default).\n\t*/\n\tconstructor: function Mancala(activePlayer, board){\n\t\tGame.call(this, activePlayer);\n\t\tthis.board = board || this.makeBoard();\n\t},\n\t\n\t/** `makeBoard(seeds, houses)` builds an array for the given amounts of houses and seeds per \n\thouse. By default 4 seeds and 6 houses per player are assumed.\n\t*/\n\tmakeBoard: function makeBoard(seeds, houses){\n\t\tseeds = isNaN(seeds) ? 4 : +seeds;\n\t\thouses = isNaN(houses) ? 6 : +houses;\n\t\tvar result = [];\n\t\tfor(var j = 0; j < 2; j++){\n\t\t\tfor(var i = 0; i < houses; i++){\n\t\t\t\tresult.push(seeds);\n\t\t\t}\n\t\t\tresult.push(0);\n\t\t}\n\t\treturn result;\n\t},\n\t\n\t/** The players' roles in a Mancala match are `\"North\"` and `\"South\"`.\n\t*/\n\tplayers: [\"North\", \"South\"],\n\t\n\t/** If `emptyCapture` is true, making a capture only moves the active player's seed to his \n\tstore, and the opponents seeds are not captured. By default this is false.\n\t*/\n\temptyCapture: false,\n\t\n\t/** If `countRemainingSeeds` is true, at the end of the game if a player has seeds on his \n\thouses, those seeds are included in his score. This is the default behaviour.\n\t*/\n\tcountRemainingSeeds: true,\n\t\n\t// ## Game state information ###################################################################\n\t\n\t/** `store(player)` returns the index in this game's board of the player's store.\n\t*/\n\tstore: function store(player){\n\t\tswitch (this.players.indexOf(player)) {\n\t\t\tcase 0: return this.board.length / 2 - 1; // Store of North.\n\t\t\tcase 1: return this.board.length - 1; // Store of South.\n\t\t\tdefault: throw new Error(\"Invalid player \"+ player +\".\");\n\t\t}\n\t},\n\n\t/** `houses(player)` returns an array with the indexes of the player's houses in this game's \n\tboard.\n\t*/\n\thouses: function houses(player){\n\t\tswitch (this.players.indexOf(player)) {\n\t\t\tcase 0: return Iterable.range(0, this.board.length / 2 - 1).toArray(); // Store of North.\n\t\t\tcase 1: return Iterable.range(this.board.length / 2, this.board.length - 1).toArray(); // Store of South.\n\t\t\tdefault: throw new Error(\"Invalid player \"+ player +\".\");\n\t\t}\n\t},\n\t\n\t/** The house in front of a players house is calculated by `oppositeHouse(player, i)`. It \n\treturns the index of the opposite house of `i` for the given player, or a negative if `i` is not\n\ta house of the given player. This is necessary for resolving captures.\n\t*/\n\toppositeHouse: function oppositeHouse(player, i) {\n\t\tvar playerHouses = this.houses(player),\n\t\t\topponentHouses = this.houses(this.opponent(player)),\n\t\t\tindex = playerHouses.indexOf(i);\n\t\treturn index < 0 ? index : opponentHouses.reverse()[index];\n\t},\n\t\n\t/** The flow of seeds on the board is defined by `nextSquare(player, i)`. It returns the index\n\tof the square following `i` for the given player.\n\t*/\n\tnextSquare: function nextSquare(player, i){\n\t\tdo {\n\t\t\ti = (i + 1) % this.board.length;\n\t\t} while (i === this.store(this.opponent(player)));\n\t\treturn i;\n\t},\n\t\n\t// ## Game logic ###############################################################################\n\t\n\t/** A move for a Mancala player is an index of the square in the board.\n\t*/\n\tmoves: function moves(){\n\t\tif (this.result()) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\tvar board = this.board,\n\t\t\t\tresult = {},\n\t\t\t\tactivePlayer = this.activePlayer();\t\t\t\n\t\t\tresult[activePlayer] = this.houses(activePlayer).filter(function(house){\n\t\t\t\treturn board[house] > 0; // The house has seeds.\n\t\t\t});\n\t\t\treturn result[activePlayer].length > 0 ? result : null;\n\t\t}\n\t},\n\t\n\t/** The game ends when the active player cannot move. The `score()` for each player is the seed\n\tcount of its store and (if `countRemainingSeeds` is true) the houses on its side of the board.\n\t*/\n\tscores: function scores() {\n\t\tvar game = this,\n\t\t\tboard = this.board,\n\t\t\tsides = this.players.map(function (player) {\n\t\t\t\treturn iterable(game.houses(player)).map(function (h) {\n\t\t\t\t\treturn board[h];\n\t\t\t\t}).sum();\n\t\t\t});\n\t\tif (sides[0] > 0 && sides[1] > 0) { // Both sides have seeds.\n\t\t\treturn null;\n\t\t} else { // One side has no seeds.\n\t\t\tvar _scores = {};\n\t\t\tthis.players.forEach(function (player, i) {\n\t\t\t\t_scores[player] = board[game.store(player)] + game.countRemainingSeeds * sides[i];\n\t\t\t});\n\t\t\treturn _scores;\n\t\t}\n\t},\n\t\n\t/** The result for each player is the difference between its score and the opponent's.\n\t*/\n\tresult: function result() {\n\t\tvar scores = this.scores(),\n\t\t\tplayers = this.players;\n\t\treturn scores && this.zerosumResult(scores[players[0]] - scores[players[1]], players[0]);\n\t},\n\t\n\t/** The `next(moves)` game state implies taking all seeds from the selected house and moving\n\tthem across the board, placing one seed at each step. A player can pass through its store but\n\tnot through the opponent's. If the move ends at the active player's store, then it has another\n\tmove. If it ends at an empty house, capture may occur.\n\t*/\n\tnext: function next(moves) {\n\t\tvar activePlayer = this.activePlayer(), \n\t\t\tmove = +moves[activePlayer],\n\t\t\tnewBoard = this.board.slice(0),\n\t\t\tseeds = newBoard[move],\n\t\t\tfreeTurn = false,\n\t\t\tstore, oppositeHouse;\n\t\traiseIf(seeds < 1, \"Invalid move \", move, \" for game \", this);\n\t\t// Move.\n\t\tnewBoard[move] = 0;\n\t\tfor (; seeds > 0; seeds--) {\n\t\t\tmove = this.nextSquare(activePlayer, move);\n\t\t\tnewBoard[move]++;\n\t\t}\n\t\t// Free turn if last square of the move is the player's store.\n\t\tfreeTurn = move == this.store(activePlayer); \n\t\t// Capture.\n\t\tif (!freeTurn) {\n\t\t\toppositeHouse = this.oppositeHouse(activePlayer, move);\n\t\t\tif (oppositeHouse >= 0 && newBoard[move] == 1 && newBoard[oppositeHouse] > 0) { \n\t\t\t\tstore = this.store(activePlayer);\n\t\t\t\tnewBoard[store]++;\n\t\t\t\tnewBoard[move] = 0;\n\t\t\t\tif (!this.emptyCapture) {\n\t\t\t\t\tnewBoard[store] += newBoard[oppositeHouse];\n\t\t\t\t\tnewBoard[oppositeHouse] = 0;\n\t\t\t\t}\t\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn new this.constructor(freeTurn ? activePlayer : this.opponent(), newBoard);\n\t},\n\t\n\t/** The `resultBounds` for a Mancala game are estimated with the total number of seeds in the \n\tboard. It is very unlikely to get these result though.\n\t*/\n\tresultBounds: function resultBounds() {\n\t\tvar stoneCount = iterable(this.board).sum();\n\t\treturn [-stoneCount,+stoneCount];\n\t},\n\t\n\t// ## Utility methods ##########################################################################\n\t\n\t/** Serialization is used in the `toString()` method, but it is also vital for sending the game\n\tstate across a network or the marshalling between the rendering thread and a webworker.\n\t*/\n\t'static __SERMAT__': {\n\t\tidentifier: 'Mancala',\n\t\tserializer: function serialize_Mancala(obj) {\n\t\t\treturn [obj.activePlayer(), obj.board];\n\t\t}\n\t},\n\n\tidentifier: function identifier() {\n\t\treturn this.activePlayer().charAt(0) + this.board.map(function (n) {\n\t\t\treturn ('00'+ n.toString(36)).substr(-2);\n\t\t}).join('');\n\t},\n\n\t/** `printBoard()` creates a text (ASCII) version of the board.\n\t*/\n\tprintBoard: function printBoard() {\n\t\tvar game = this,\n\t\t\tlpad = base.Text.lpad,\n\t\t\tnorth = this.players[0],\n\t\t\tnorthHouses = this.houses(north).map(function (h) {\n\t\t\t\treturn lpad(''+ game.board[h], 2, '0');\n\t\t\t}).reverse(),\n\t\t\tnorthStore = lpad(''+ this.board[this.store(north)], 2, '0'),\n\t\t\tsouth = this.players[1],\n\t\t\tsouthHouses = this.houses(south).map(function (h) {\n\t\t\t\treturn lpad(''+ game.board[h], 2, '0');\n\t\t\t}),\n\t\t\tsouthStore = lpad(''+ this.board[this.store(south)], 2, '0');\n\t\treturn \"   \"+ northHouses.join(\" | \") +\"   \\n\"+\n\t\t\tnorthStore +\" \".repeat(northHouses.length * 2 + (northHouses.length - 1) * 3 + 2) + southStore +\"\\n\"+\n\t\t\t\"   \"+ southHouses.join(\" | \") +\"   \";\n\t},\n\t\n\t// ## Heuristics and AI ########################################################################\n\n\t/** `Mancala.heuristics` is a bundle of helper functions to build heuristic evaluation functions\n\tfor this game.\n\t*/\n\t'static heuristics': {\n\t\t/** + `heuristicFromWeights(weights=default weights)` builds an heuristic evaluation \n\t\t\tfunction from weights for each square in the board. The result of the function is the \n\t\t\tnormalized weighted sum.\n\t\t*/\n\t\theuristicFromWeights: function heuristicFromWeights(weights) {\n\t\t\tvar weightSum = iterable(weights).map(Math.abs).sum();\n\t\t\tfunction __heuristic__(game, player) {\n\t\t\t\tvar seedSum = 0, signum;\n\t\t\t\tswitch (game.players.indexOf(player)) {\n\t\t\t\t\tcase 0: signum = 1; break; // North.\n\t\t\t\t\tcase 1: signum = -1; break; // South.\n\t\t\t\t\tdefault: throw new Error(\"Invalid player \"+ player +\".\");\n\t\t\t\t}\n\t\t\t\treturn iterable(game.board).map(function (seeds, i) {\n\t\t\t\t\tseedSum += seeds;\n\t\t\t\t\treturn seeds * weights[i]; //TODO Normalize weights before.\n\t\t\t\t}).sum() / weightSum / seedSum * signum;\n\t\t\t}\n\t\t\t__heuristic__.weights = weights;\n\t\t\treturn __heuristic__;\n\t\t}\n\t},\n\t\n\t// ## Mancala type initialization ##############################################################\n\n\t'': function () {\n\t\t/** The `makeBoard` can also be used without an instance of Mancala.\n\t\t*/\n\t\tthis.makeBoard = this.prototype.makeBoard;\n\t\t\n\t\t/** The `defaultHeuristic `for Mancala is based on weights for each square. Stores are worth\n\t\t5 and houses 1, own possitive and the opponent's negative.\n\t\t*/\n\t\tthis.heuristics.defaultHeuristic = this.heuristics.heuristicFromWeights(\n\t\t\t[+1,+1,+1,+1,+1,+1,+5, \n\t\t\t -1,-1,-1,-1,-1,-1,-5]\n\t\t);\n\t}\n}); // declare Mancala.\n","/** # Colograph\n\nImplementation of the game Colograph, a competitive version of the classic [graph colouring problem](http://en.wikipedia.org/wiki/Graph_coloring).\n*/ \t\nexports.Colograph = declare(Game, {\n\tname: 'Colograph',\n\t\n\t/** The constructor takes the following arguments:\n\t*/\n\tconstructor: function Colograph(args) {\n\t\t/** + `activePlayer`: There is only one active player per turn, and it is the first player \n\t\t\tby default.\n\t\t*/\n\t\tGame.call(this, args ? args.activePlayer : undefined);\n\t\tbase.initialize(this, args)\n\t\t/** + `colours`: The colour of each node in the graph is given by an array of integers, each \n\t\t\tbeing the node's player index in the players array, or -1 for uncoloured nodes. By \n\t\t\tdefault all nodes are not coloured, which is the initial game state.\n\t\t*/\n\t\t\t.object('colours', { defaultValue: {} })\n\t\t/** + `edges`: The edges of the graph are represented by an array of arrays of integers, \n\t\t\tacting as an adjacency list. \n\t\t*/\n\t\t\t.array('edges', { defaultValue: [[1,3],[2],[3],[]] })\n\t\t/** + `shapes`: Each of the graph's nodes can have a certain shape. This is specified by an \n\t\t\tarray of strings, one for each node.\n\t\t*/\n\t\t\t.array('shapes', { defaultValue: ['circle', 'triangle', 'square', 'star'] })\n\t\t/** + `scoreSameShape=-1`: Score added by each coloured edge that binds two nodes of the \n\t\t\tsame shape.\n\t\t*/\n\t\t\t.number('scoreSameShape', { defaultValue: -1, coerce: true })\n\t\t/** + `scoreDifferentShape=-1`: Score added by each coloured edge that binds two nodes of \n\t\t\tdifferent shapes.\n\t\t*/\n\t\t\t.number('scoreDifferentShape', { defaultValue: -1, coerce: true });\n\t},\n\t\n\t/** There are two roles in this game: Red and Blue.\n\t*/\n\tplayers: ['Red', 'Blue'],\n\t\n\t/** Scores are calculated for each player with the edges of their colour. An edge connecting two\n\tnodes of the same colour is considered to be of that colour.\n\t*/\n\tscore: function score() {\n\t\tvar points = {},\n\t\t\tshapes = this.shapes,\n\t\t\tcolours = this.colours,\n\t\t\tscoreSameShape = this.scoreSameShape,\n\t\t\tscoreDifferentShape = this.scoreDifferentShape,\n\t\t\tstartingPoints = this.edges.length;\n\t\tthis.players.forEach(function (player) {\n\t\t\tpoints[player] = startingPoints;\n\t\t});\n\t\titerable(this.edges).forEach(function (n1_edges, n1) {\n\t\t\tn1_edges.forEach(function (n2) {\n\t\t\t\tvar k = n1 +','+ n2;\n\t\t\t\tif (colours.hasOwnProperty(k)) {\n\t\t\t\t\tpoints[colours[k]] += shapes[n1] === shapes[n2] ? scoreSameShape : scoreDifferentShape;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn points;\n\t},\n\t\n\t/** The game ends when the active player has no moves, i.e. when all nodes in the graph have \n\tbeen coloured. The match is won by the player with the greatest score.\n\t*/\n\tresult: function result() {\n\t\tif (!this.moves()) { // If the active player cannot move, the game is over.\n\t\t\tvar points = this.score(), \n\t\t\t\tplayers = this.players;\n\t\t\treturn this.zerosumResult(points[players[0]] - points[players[1]], players[0]);\n\t\t} else {\n\t\t\treturn null; // The game continues.\n\t\t}\n\t},\n\n\t/** Every non coloured node is a possible move for the active player.\n\t*/\n\tmoves: function moves() {\n\t\tvar colours = this.colours, \n\t\t\tuncoloured = [];\n\t\tfor (var i = 0; i < this.edges.length; i++) {\n\t\t\tif (!this.colours.hasOwnProperty(i)) {\n\t\t\t\tuncoloured.push(i);\n\t\t\t}\n\t\t}\n\t\treturn uncoloured.length < 1 ? null : obj(this.activePlayer(), uncoloured);\n\t},\n\n\t/** The result of any move is the colouring of one previously uncoloured node with the active \n\tplayers's colour.\n\t*/\n\tnext: function next(moves) {\n\t\tvar activePlayer = this.activePlayer(), \n\t\t\tmove = +moves[activePlayer] >> 0;\n\t\traiseIf(move < 0 || move >= this.colours.length, \n\t\t\t'Invalid move: node ', move, ' does not exist in ', this, '.');\n\t\traiseIf(this.colours[move] >= 0, \n\t\t\t'Invalid move: node ', move, ' has already been coloured in ', this, '.');\n\t\tvar newColours = copy(obj(move, activePlayer), this.colours);\n\t\tthis.edges[move].forEach(function (n2) { // Colour edges from the one coloured in this move.\n\t\t\tif (newColours[n2] === activePlayer) {\n\t\t\t\tnewColours[move +','+ n2] = activePlayer;\n\t\t\t}\n\t\t});\n\t\tthis.edges.forEach(function (adjs, n1) { // Colour edges to the one coloured in this move.\n\t\t\tif (n1 !== move && adjs.indexOf(move) >= 0 && newColours[n1] === activePlayer) {\n\t\t\t\tnewColours[n1 +','+ move] = activePlayer;\n\t\t\t} \n\t\t});\n\t\treturn new this.constructor({\n\t\t\tactivePlayer: this.opponent(activePlayer),\n\t\t\tcolours: newColours,\n\t\t\tedges: this.edges,\n\t\t\tshapes: this.shapes,\n\t\t\tscoreSameShape: this.scoreSameShape,\n\t\t\tscoreDifferentShape: this.scoreDifferentShape\n\t\t});\n\t},\n\n\t// ## Utility methods ##########################################################################\n\t\n\t/** Serialization is used in the `toString()` method, but it is also vital for sending the game\n\tstate across a network or the marshalling between the rendering thread and a webworker.\n\t*/\n\t'static __SERMAT__': {\n\t\tidentifier: 'Colograph',\n\t\tserializer: function serialize_Colograph(obj) {\n\t\t\treturn [{\n\t\t\t\tactivePlayer: obj.activePlayer(), \n\t\t\t\tcolours: obj.colours,\n\t\t\t\tedges: obj.edges,\n\t\t\t\tshapes: obj.shapes,\n\t\t\t\tscoreSameShape: obj.scoreSameShape,\n\t\t\t\tscoreDifferentShape: obj.scoreDifferentShape\n\t\t\t}];\n\t\t}\n\t},\n\t\n\t// ## Game properties. #########################################################################\n\n\t/** `edgeColour(node1, node2)` returns a colour (player index) if the nodes are joined by an \n\tedge, and both have that same colour.\n\t*/\n\tedgeColour: function edgeColour(node1, node2) {\n\t\tvar connected = this.edges[node1].indexOf(node2) >= 0 || this.edges[node2].indexOf(node1) >= 0,\n\t\t\tcolour1 = this.colours[node1],\n\t\t\tcolour2 = this.colours[node2];\n\t\treturn connected && colour1 >= 0 && colour1 === colour2 ? colour1 : -1;\n\t},\n\t\n\t// ## Heuristics. ##############################################################################\n\t\n\t/** `heuristics` is a namespace for heuristic evaluation functions to be used with artificial \n\tintelligence methods such as Minimax.\n\t*/\n\t'static heuristics': {\n\t\t/** + `scoreDifference(game, player)` is a simple heuristic that uses the current score.\n\t\t*/\n\t\tscoreDifference: function scoreDifference(game, player) {\n\t\t\tvar score = game.score(),\n\t\t\t\tresult = 0;\n\t\t\tfor (var p in score) {\n\t\t\t\tresult += p === player ? score[p] : -score[p];\n\t\t\t}\n\t\t\treturn result / game.edges.length / 2;\n\t\t}\n\t},\n\t\n\t// ## Graph generation. ########################################################################\n\n\t/** One of the nice features of this game is the variety that comes from chaning the graph on \n\twhich the game is played. `randomGraph` can be used to generate graphs to experiment with.\n\t*/\n\t'static randomGraph': function randomGraph(nodeCount, edgeCount, random) {\n\t\tnodeCount = Math.max(2, +nodeCount >> 0);\n\t\tedgeCount = Math.max(nodeCount - 1, +edgeCount >> 0);\n\t\tvar edges = basis.iterables.range(nodeCount - 1).map(function (i) {\n\t\t\treturn random.split(1, basis.iterables.range(i + 1, nodeCount).toArray());\n\t\t}).toArray();\n\t\tfor (var n = edgeCount - (nodeCount - 1), pair, pair2; n > 0; n--) {\n\t\t\tpair = random.choice(edges);\n\t\t\tif (pair[1].length > 0) {\n\t\t\t\tpair2 = random.split(1, pair[1]);\n\t\t\t\tpair[0].push(pair2[0][0]);\n\t\t\t\tpair[1] = pair2[1];\n\t\t\t\tn--;\n\t\t\t}\n\t\t}\n\t\tedges = edges.map(function (pair) {\n\t\t\treturn pair[0];\n\t\t});\n\t\tedges.push([]); // Last node has no edges.\n\t\treturn edges;\n\t},\n\t\n\t/** `randomGame(params)` will generates a random Colograph game with a random graph.\n\t*/\n\t'static randomGame': function randomGame(args) {\n\t\tparams = base.initialize({}, params)\n\t\t\t.object('random', { defaultValue: randomness.DEFAULT })\n\t\t\t.integer('nodeCount', { defaultValue: 8, coerce: true })\n\t\t\t.integer('edgeCount', { defaultValue: 11, coerce: true })\n\t\t\t.integer('shapeCount', { defaultValue: 4, coerce: true, minimum: 1, maximum: 4 })\n\t\t\t.subject;\n\t\tvar SHAPES = ['circle', 'triangle', 'square', 'star'];\n\t\treturn new Colograph({ \n\t\t\tedges: this.randomGraph(params.nodeCount, params.edgeCount, params.random),\n\t\t\tshapes: params.random.randoms(params.nodeCount, 0, params.shapeCount).map(function (r) {\n\t\t\t\treturn SHAPES[r|0];\n\t\t\t}),\n\t\t\tscoreSameShape: 1\n\t\t});\n\t},\n\t\n\t// ## Human interface based on KineticJS. ######################################################\n\t\n\t/** This legacy code is an implementation of a UI for Colograph using \n\t[KineticJS](http://kineticjs.com/). Not entirely compatible yet.\n\t*/\n\t'static KineticUI': declare(UserInterface, {\n\t\tconstructor: function KineticUI(args) {\n\t\t\tUserInterface.call(this, args);\n\t\t\tinitialize(this, args)\n\t\t\t\t.string(\"container\", { defaultValue: \"colograph-container\" })\n\t\t\t\t.object(\"Kinetic\", { defaultValue: window.Kinetic })\n\t\t\t\t.integer('canvasRadius', { defaultValue: NaN, coerce: true })\n\t\t\t\t.integer('nodeRadius', { defaultValue: 15, coerce: true })\n\t\t\t\t.array('playerColours', { defaultValue: ['red', 'blue'] });\n\t\t\tif (isNaN(this.canvasRadius)) {\n\t\t\t\tthis.canvasRadius = (Math.min(screen.width, screen.height) * 0.6) >> 1;\n\t\t\t}\n\t\t\tvar stage = this.stage = new Kinetic.Stage({ \n\t\t\t\t\tcontainer: this.container, \n\t\t\t\t\twidth: this.canvasRadius * 2, \n\t\t\t\t\theight: this.canvasRadius * 2 \n\t\t\t\t}),\n\t\t\t\tlayer = this.layer = new Kinetic.Layer({ \n\t\t\t\t\tclearBeforeDraw: true, \n\t\t\t\t\toffsetX: -this.canvasRadius, \n\t\t\t\t\toffsetY: -this.canvasRadius \n\t\t\t\t}),\n\t\t\t\tgame = this.match.state();\n\t\t\tstage.add(layer);\n\t\t\tsetInterval(stage.draw.bind(stage), 1000 / 30);\n\t\t\tlayer.destroyChildren();\n\t\t\tthis.edges = {};\n\t\t\tthis.nodes = {};\n\t\t\tthis.drawEdges(game);\n\t\t\tthis.drawNodes(game);\n\t\t},\n\t\t\n\t\tdrawEdges: function drawEdges(game) {\n\t\t\tvar angle = 2 * Math.PI / game.edges.length,\n\t\t\t\tradius = this.canvasRadius - this.nodeRadius * 2,\n\t\t\t\tui = this;\n\t\t\tgame.edges.forEach(function (n2s, n1) { // Create lines.\n\t\t\t\tn2s.forEach(function (n2) {\n\t\t\t\t\tvar line = new ui.Kinetic.Line({\n\t\t\t\t\t\tpoints: [radius * Math.cos(angle * n1), radius * Math.sin(angle * n1),\n\t\t\t\t\t\t\t\tradius * Math.cos(angle * n2), radius * Math.sin(angle * n2)],\n\t\t\t\t\t\tstroke: \"black\", strokeWidth: 2\n\t\t\t\t\t});\n\t\t\t\t\tui.edges[n1+','+n2] = line;\n\t\t\t\t\tui.layer.add(line);\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t\n\t\tdrawNodes: function drawNodes(game) {\n\t\t\tvar angle = 2 * Math.PI / game.edges.length,\n\t\t\t\tradius = this.canvasRadius - this.nodeRadius * 2,\n\t\t\t\tui = this;\n\t\t\tgame.edges.forEach(function (adjs, n) {\n\t\t\t\tvar shape,\n\t\t\t\t\tx = radius * Math.cos(angle * n),\n\t\t\t\t\ty = radius * Math.sin(angle * n);\n\t\t\t\tswitch (game.shapes[n]) {\n\t\t\t\t\tcase 'square': \n\t\t\t\t\t\tshape = ui.drawSquare(x, y, ui.nodeRadius, n); break;\n\t\t\t\t\tcase 'triangle': \n\t\t\t\t\t\tshape = ui.drawTriangle(x, y, ui.nodeRadius, n); break;\n\t\t\t\t\tcase 'star': \n\t\t\t\t\t\tshape = ui.drawStar(x, y, ui.nodeRadius, n); break;\n\t\t\t\t\tdefault: \n\t\t\t\t\t\tshape = ui.drawCircle(x, y, ui.nodeRadius, n);\n\t\t\t\t}\n\t\t\t\tshape.on('mouseover', function () {\n\t\t\t\t\tshape.setScale(1.2);\n\t\t\t\t});\n\t\t\t\tshape.on('mouseout', function () {\n\t\t\t\t\tshape.setScale(1);\n\t\t\t\t});\n\t\t\t\tshape.on('click tap', function () {\n\t\t\t\t\tui.perform(n);\n\t\t\t\t});\n\t\t\t\tshape.setRotation(Math.random() * 2 * Math.PI);//FIXME\n\t\t\t\tui.nodes[n] = shape;\n\t\t\t\tui.layer.add(shape);\n\t\t\t});\n\t\t},\n\t\t\n\t\tdrawCircle: function drawCircle(x, y, r, n) {\n\t\t\treturn new this.Kinetic.Circle({ \n\t\t\t\tx: x, y: y, radius: r,\n\t\t\t\tfill: \"white\", stroke: \"black\", strokeWidth: 2\n\t\t\t});\n\t\t},\n\t\t\n\t\tdrawSquare: function drawSquare(x, y, r, n) {\n\t\t\treturn new this.Kinetic.Rect({ \n\t\t\t\tx: x, y: y, width: r * 2, height: r * 2,\n\t\t\t\toffsetX: r, offsetY: r,\n\t\t\t\tfill: \"white\", stroke: \"black\", strokeWidth: 2\n\t\t\t});\n\t\t},\n\t\t\n\t\tdrawStar: function drawStar(x, y, r, n) {\n\t\t\treturn new Kinetic.Star({ numPoints: 5,\n\t\t\t\tx: x, y: y, innerRadius: r * 0.6, outerRadius: r * 1.5,\n\t\t\t\tfill: 'white', stroke: 'black', strokeWidth: 2\n\t\t\t});\n\t\t},\n\t\t\n\t\tdrawTriangle: function drawTriangle(x, y, r, n) {\n\t\t\treturn new Kinetic.RegularPolygon({ sides: 3,\n\t\t\t\tx: x, y: y, radius: r * 1.25,\n\t\t\t\tfill: 'white', stroke: 'black', strokeWidth: 2\n\t\t\t});\n\t\t},\n\t\t\n\t\tdisplay: function display(game) {\n\t\t\tthis.updateEdges(game);\n\t\t\tthis.updateNodes(game);\n\t\t},\n\t\t\n\t\tupdateEdges: function updateEdges(game) {\n\t\t\tvar ui = this;\n\t\t\tgame.edges.forEach(function (n2s, n1) {\n\t\t\t\tn2s.forEach(function (n2) {\n\t\t\t\t\tvar k = n1+','+n2;\n\t\t\t\t\tui.edges[k].setStroke(game.colours[k] || \"black\");\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\t\n\t\tupdateNodes: function updateNodes(game) {\n\t\t\tvar ui = this;\n\t\t\tgame.edges.forEach(function (adjs, n) {\n\t\t\t\tvar colour = game.colours[n];\n\t\t\t\tif (colour) {\n\t\t\t\t\tui.nodes[n].setFill(colour);\n\t\t\t\t\tui.nodes[n].off('mouseover mouseout click tap');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}) // KineticJSCircleUI.\n\t\n}); // declare Colograph.\t\n","/** # Chess\n\nImplementation of [Chess](http://www.fide.com/component/handbook/?id=124&view=article) for Ludorum.\n*/\n\n/** `Piece` is the base class for all pieces in the game. Pieces' classes help to calculate moves,\nand the effects these moves have on the board.\n*/\nvar Piece = declare({\n\tconstructor: function Piece(player, position) {\n\t\tthis.player = player;\n\t\tthis.position = position;\n\t},\n\n\tmoves: base.objects.unimplemented('Piece', 'moves(game, board)'),\n\t\n\tcanMove: base.objects.unimplemented('Piece', 'canMove(game, board, position)'),\n\t\n\tmoveTo: function moveTo(position) {\n\t\treturn new this.constructor(this.player, position);\n\t},\n\t\n\tnext: function (game, board, move) {\n\t\treturn board.clone()\n\t\t\t.__place__(move[1])\n\t\t\t.__place__(move[2], this.moveTo(move[2]));\n\t}\n});\n\nvar Chess = exports.Chess = declare(Game, {\n\tname: 'Chess',\n\n\t/** The game is played by two players: White and Black. White moves first.\n\t*/\n\tplayers: [\"White\", \"Black\"],\n\t\n\t/** The constructor takes the `activePlayer` (`\"White\"` by default), and the `board` as an \n\tinstance of `CheckerboardFromPieces` (with the initial setup by default).\t\n\t*/\n\tconstructor: function Chess(params){\n\t\tparams = params || {};\n\t\tGame.call(this, params.activePlayer || this.players[0]);\n\t\tthis.board = !params.board ? this.initialBoard \n\t\t\t: typeof params.board === 'string' ? Chess.boardFromFEN(params.board)\n\t\t\t: params.board;\n\t\tthis.castling = params.castling || \"KQkq\";\n\t\tthis.enPassant = params.enPassant;\n\t\tthis.halfMoves = params.halfMoves |0;\n\t\tthis.fullMoves = Math.max(params.fullMoves |0, 1);\n\n\t\t// Classify pieces by player and kind.\n\t\tvar game = this;\n\t\tthis.pieces = iterable(this.players).map(function (player) {\n\t\t\treturn [player, iterable(game.kinds).mapApply(function (kindName, kindConstructor) {\n\t\t\t\treturn [kindName, []];\n\t\t\t}).toObject()];\n\t\t}).toObject();\n\t\titerable(this.board.pieces).forEachApply(function (_, piece) {\n\t\t\tgame.pieces[piece.player][piece.name].push(piece);\n\t\t});\n\t},\n\n\t\n\t/** The piece `kinds` of Chess are: Pawn, Knight, Bishop, Rook, Queen and King.\n\t*/\n\t'dual kinds': {\n\t\tPawn: declare(Piece, {\n\t\t\tname: 'Pawn',\n\t\t\t\n\t\t\tmoves: function moves(game, board) { // TODO En passant captures.\n\t\t\t\tvar piece = this,\n\t\t\t\t\tdirection = (this.player === game.players[0]) ? -1 : +1,\n\t\t\t\t\tr = [],\n\t\t\t\t\tp = [this.position[0] + direction, this.position[1]];\n\t\t\t\tif (!board.square(p)) { // move forward\n\t\t\t\t\tr.push(p);\n\t\t\t\t}\n\t\t\t\t[[direction,-1], [direction,+1]].map(function (d) { // capture to the sides.\n\t\t\t\t\treturn [piece.position[0] + d[0], piece.position[1] + d[1]];\n\t\t\t\t}).forEach(function (p) {\n\t\t\t\t\tif (board.isValidCoord(p)) {\n\t\t\t\t\t\tvar square = board.square(p);\n\t\t\t\t\t\tif (square && square.player !== piece.player) {\n\t\t\t\t\t\t\tr.push(p);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (this.position[0] === (direction > 0 ? 1 : board.height - 2)) { // double forward at first rank.\n\t\t\t\t\tp = [this.position[0] + 2 * direction, this.position[1]];\n\t\t\t\t\tif (!board.square(p)) { // move forward\n\t\t\t\t\t\tr.push(p);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.position[0] === (direction < 0 ? 1 : board.height - 2)) { // Promotions at the last rank.\n\t\t\t\t\tvar promotions = ['Knight', 'Bishop', 'Rook', 'Queen'];\n\t\t\t\t\treturn iterable(r).map(function (p) {\n\t\t\t\t\t\treturn promotions.map(function (k) {\n\t\t\t\t\t\t\treturn ['promote', piece.position, p, k];\n\t\t\t\t\t\t});\n\t\t\t\t\t}).flatten();\n\t\t\t\t} else {\n\t\t\t\t\treturn iterable(r).map(function (p) {\n\t\t\t\t\t\treturn ['move', piece.position, p];\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t//canMove: TODO,\n\t\t\t\n\t\t\tnext: function next(game, board, move) {\n\t\t\t\tif (move[0] === 'move') {\n\t\t\t\t\treturn Piece.prototype.next.call(this, game, board, move);\n\t\t\t\t} else { // Promotion\n\t\t\t\t\treturn board.clone()\n\t\t\t\t\t\t.__place__(move[1])\n\t\t\t\t\t\t.__place__(move[2], new Chess.kinds[move[3]](this.player, move[2]));\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\ttoString: function toString() {\n\t\t\t\treturn this.player === \"White\" ? \"P\" : \"p\";\n\t\t\t}\n\t\t}), // declare Chess.kinds.Pawn\n\n\t\tKnight: declare(Piece, {\n\t\t\tname: 'Knight',\n\t\t\t\n\t\t\tDELTAS: [[+2,+1],[+1,+2],[+2,-1],[-1,+2],[-2,-1],[-1,-2],[-2,+1],[+1,-2]],\n\t\t\t\n\t\t\tmoves: function moves(game, board) {\n\t\t\t\tvar piece = this;\n\t\t\t\treturn iterable(this.DELTAS).map(function (d) {\n\t\t\t\t\treturn ['move', piece.position, [piece.position[0] + d[0], piece.position[1] + d[1]]];\n\t\t\t\t}, function (m) {\n\t\t\t\t\tif (board.isValidCoord(m[2])) {\n\t\t\t\t\t\tvar s = board.square(m[2]);\n\t\t\t\t\t\treturn !s || s.player !== piece.player;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\t//canMove: TODO,\n\t\t\t\n\t\t\ttoString: function toString() {\n\t\t\t\treturn this.player === \"White\" ? \"N\" : \"n\";\n\t\t\t}\n\t\t}), // declare Chess.kinds.Knight\n\n\t\tBishop: declare(Piece, {\n\t\t\tname: 'Bishop',\n\t\t\t\n\t\t\tmoves: function moves(game, board) {\n\t\t\t\tvar piece = this;\n\t\t\t\treturn iterable(board.walks(this.position, Checkerboard.DIRECTIONS.DIAGONAL)).map(function (walk) {\n\t\t\t\t\tvar cont = true;\n\t\t\t\t\treturn walk.tail().takeWhile(function (p) { \n\t\t\t\t\t\tvar square = board.square(p),\n\t\t\t\t\t\t\tr = cont && (!square || square.player !== piece.player);\n\t\t\t\t\t\tcont = cont && !square;\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}).map(function (p) {\n\t\t\t\t\t\treturn ['move', piece.position, p];\n\t\t\t\t\t});\n\t\t\t\t}).flatten();\n\t\t\t},\n\t\t\t\n\t\t\t//canMove: TODO,\n\t\t\t\n\t\t\tnext: function (game, board, move) {\n\t\t\t\treturn board.clone()\n\t\t\t\t\t.__place__(move[1])\n\t\t\t\t\t.__place__(move[2], new this.constructor(this.player, move[2]));\n\t\t\t},\n\t\t\t\n\t\t\ttoString: function toString() {\n\t\t\t\treturn this.player === \"White\" ? \"B\" : \"b\";\n\t\t\t}\n\t\t}), // declare Chess.kinds.Bishop\n\t\t\n\t\tRook: declare(Piece, {\n\t\t\tname: 'Rook',\n\t\t\t\n\t\t\tmoves: function moves(game, board) {\n\t\t\t\tvar piece = this;\n\t\t\t\treturn iterable(board.walks(this.position, Checkerboard.DIRECTIONS.ORTHOGONAL)).map(function (walk) {\n\t\t\t\t\tvar cont = true;\n\t\t\t\t\treturn walk.tail().takeWhile(function (p) {\n\t\t\t\t\t\tvar square = board.square(p),\n\t\t\t\t\t\t\tr = cont && (!square || square.player !== piece.player);\n\t\t\t\t\t\tcont = cont && !square;\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}).map(function (p) {\n\t\t\t\t\t\treturn ['move', piece.position, p];\n\t\t\t\t\t});\n\t\t\t\t}).flatten();\n\t\t\t},\n\t\t\t\n\t\t\t//canMove: TODO,\n\t\t\t\n\t\t\ttoString: function toString() {\n\t\t\t\treturn this.player === \"White\" ? \"R\" : \"r\";\n\t\t\t}\n\t\t}), // declare Chess.kinds.Rook\n\n\t\tQueen: declare(Piece, {\n\t\t\tname: 'Queen',\n\t\t\t\n\t\t\tmoves: function moves(game, board) {\n\t\t\t\tvar piece = this;\n\t\t\t\treturn iterable(board.walks(this.position, Checkerboard.DIRECTIONS.EVERY)).map(function (walk) {\n\t\t\t\t\tvar cont = true;\n\t\t\t\t\treturn walk.tail().takeWhile(function (p) { \n\t\t\t\t\t\tvar square = board.square(p),\n\t\t\t\t\t\t\tr = cont && (!square || square.player !== piece.player);\n\t\t\t\t\t\tcont = cont && !square;\n\t\t\t\t\t\treturn r;\n\t\t\t\t\t}).map(function (p) {\n\t\t\t\t\t\treturn ['move', piece.position, p];\n\t\t\t\t\t});\n\t\t\t\t}).flatten();\n\t\t\t},\n\t\t\t\n\t\t\t//canMove: TODO,\n\t\t\t\n\t\t\ttoString: function toString() {\n\t\t\t\treturn this.player === \"White\" ? \"Q\" : \"q\";\n\t\t\t}\n\t\t}), // declare Chess.kinds.Queen\n\t\t\n\t\tKing: declare(Piece, { // TODO Castling.\n\t\t\tname: 'King',\n\t\t\t\n\t\t\tmoves: function moves(game, board) {\n\t\t\t\tvar piece = this;\n\t\t\t\treturn iterable(Checkerboard.DIRECTIONS.EVERY).map(function (d) {\n\t\t\t\t\treturn ['move', piece.position, [piece.position[0] + d[0], piece.position[1] + d[1]]];\n\t\t\t\t}, function (m) {\n\t\t\t\t\tif (board.isValidCoord(m[2])) {\n\t\t\t\t\t\tvar s = board.square(m[2]);\n\t\t\t\t\t\treturn !s || s.player !== piece.player;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tcanMove: function canMove(game, board, pos) {\n\t\t\t\tif (board.isValidCoord(pos)\t&&\n\t\t\t\t\t\t(Math.abs(this.position[0] - pos[0]) === 1) !== (Math.abs(this.position[1] - pos[1]) === 1)\n\t\t\t\t\t) {\n\t\t\t\t\tvar sq = board.square(pos);\n\t\t\t\t\treturn !sq || sq.player !== this.player;\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\ttoString: function toString() {\n\t\t\t\treturn this.player === \"White\" ? \"K\" : \"k\";\n\t\t\t}\n\t\t}) // declare Chess.kinds.King\n\t}, \n\t\n\t// ## Game methods #############################################################################\n\t\n\t/** A move always places a piece in an empty square, if and only if by doing so one or more \n\tlines of the opponent's pieces get enclosed between pieces of the active player.\n\t*/\n\tmoves: function moves() {\n\t\tif (!this.hasOwnProperty('__moves__')) {\n\t\t\tvar game = this,\n\t\t\t\tboard = this.board,\n\t\t\t\tactivePlayer = this.activePlayer(),\n\t\t\t\tking = this.pieces[activePlayer].King[0];\n\t\t\t\tthis.checkMoves = []; /*FIXME iterable(this.pieces[this.opponent()]).select(1).flatten().filter(function (p) {\n\t\t\t\t\treturn p.canMove(king.position);\n\t\t\t\t}).toArray();*/\n\t\t\tif (this.checkMoves.length < 1) { // Active player's king is not in check.\n\t\t\t\tthis.__moves__ = base.obj(activePlayer, iterable(this.pieces[activePlayer])\n\t\t\t\t\t.mapApply(function (kind, pieces) {\n\t\t\t\t\t\treturn pieces;\n\t\t\t\t\t}).flatten().map(function (p) {\n\t\t\t\t\t\treturn p.moves(game, board);\n\t\t\t\t\t}).flatten().toArray()\n\t\t\t\t);\n\t\t\t} else { \n\t\t\t\tthrow new Error('Do not know what to do when in check!');//FIXME\n\t\t\t}\n\t\t}\n\t\treturn this.__moves__;\n\t},\n\t\n\t/** TODO.\n\t*/\n\tnext: function next(moves) {\n\t\t//FIXME\n\t\tvar activePlayer = this.activePlayer(),\n\t\t\tmove = moves[activePlayer],\n\t\t\tmovingPiece = this.board.square(move[1]);\n\t\tconsole.log(this+\"\");//FIXME\n\t\treturn new this.constructor({\n\t\t\tactivePlayer: this.opponent(), \n\t\t\tboard: movingPiece.next(this, this.board, move),\n\t\t\tcastling: this.castling,\n\t\t\tenPassant: null,\n\t\t\thalfMoves: this.halfMoves,\n\t\t\tfullMoves: this.fullMoves + (activePlayer === 'Black' ? 1 : 0)\n\t\t});\n\t},\n\t\n\t/** TODO.\n\t*/\n\tresult: function result() {\n\t\t//FIXME\n\t\tif (this.moves()[this.activePlayer()]) {\n\t\t\treturn null;\n\t\t} else if (this.checkMoves.length > 0) { // Checkmate!\n\t\t\treturn this.defeat();\n\t\t} else { // Stalemate.\n\t\t\treturn this.draw();\n\t\t}\n\t},\n\t\n\t// ## Utility methods ##########################################################################\n\t\n\t/** The game state serialization uses [Forsyth–Edwards notation](http://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation).\n\t*/\n\t'static __SERMAT__': {\n\t\tidentifier: 'Chess',\n\t\tserializer: function serialize_Chess(obj) {\n\t\t\treturn [obj.toFEN()];\n\t\t},\n\t\tmaterializer: function materialize_Chess(obj, args) {\n\t\t\treturn args ? Chess.fromFEN(args[0]) : null;\n\t\t}\n\t},\n\t\n\t'dual coordFromString': function coordFromString(str) {\n\t\treturn [+str.charAt(1) + 1, str.charCodeAt(0) - 'a'.charCodeAt(0)];\n\t},\n\t\n\t'dual coordToString': function coordToString(coord) {\n\t\treturn String.fromCharCode('a'.charCodeAt(0) + coord[1]) + (coord[0] + 1);\n\t},\n\t\n\t/** The default string representation of Chess is the \n\t[Forsyth–Edwards notation](http://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation).\n\t*/\n\ttoString: function toString() {\n\t\treturn this.toFEN();\n\t},\n\t\n\ttoFEN: function toFEN() {\n\t\tvar board = this.board,\n\t\t\tresult = board.horizontals().map(function (hline) {\n\t\t\t\tvar lineText = '', \n\t\t\t\t\temptySquares = 0;\n\t\t\t\thline.forEach(function (coord) {\n\t\t\t\t\tvar p = board.square(coord);\n\t\t\t\t\tif (!p) {\n\t\t\t\t\t\temptySquares++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (emptySquares > 0) {\n\t\t\t\t\t\t\tlineText += emptySquares;\n\t\t\t\t\t\t\temptySquares = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlineText += p.toString();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (emptySquares > 0) {\n\t\t\t\t\tlineText += emptySquares;\n\t\t\t\t}\n\t\t\t\treturn lineText;\n\t\t\t}).join('/');\n\t\tresult += \" \"+ (this.activePlayer().charAt(0).toLowerCase());\n\t\tresult += \" \"+ this.castling;\n\t\tresult += \" \"+ (this.enPassant ? this.coordToString(this.enPassant) : \"-\");\n\t\tresult += \" \"+ this.halfMoves +\" \"+ this.fullMoves;\n\t\treturn result;\n\t},\n\t\n\t/** The `fromFEN` function parses a string in [Forsyth–Edwards notation](http://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation)\n\tand builds the corresponding game state.\n\t*/\t\n\t'static fromFEN': function fromFEN(str) {\n\t\tstr = str.trim();\n\t\tvar match = this.FEN_REGEXP.exec(str);\n\t\traiseIf(!match, \"Invalid FEN string '\", str, \"'!\");\n\t\treturn new this({\n\t\t\tboard: this.boardFromFEN(match[1]),\n\t\t\tactivePlayer: match[2] === 'w' ? 'White' : 'Black',\n\t\t\tcastling: match[3] === '-' ? \"\" : match[3],\n\t\t\tenPassant: match[4] === '-' ? null : this.coordFromString(match[4]),\n\t\t\thalfMoves: +match[5],\n\t\t\tfullMoves: +match[6]\n\t\t});\n\t},\n\t\n\t/** To parse a string in [Forsyth–Edwards notation](http://en.wikipedia.org/wiki/Forsyth%E2%80%93Edwards_Notation)\n\tthis is regular expression is used. Capturing groups are: board, active player, castling, en \n\tpassant, half move and full move. Spaces at beginning and end must be trimmed before matching.\n\t*/\n\t'static FEN_REGEXP':\n\t\t/^((?:[pnbrqkPNBRQK12345678]+\\/){7}[pnbrqkPNBRQK12345678]+)\\s+([wb])\\s+(-|[KQkq]+)\\s+(-|[a-h][1-8])\\s+(\\d+)\\s+(\\d+)$/,\n\t\n\t'dual boardFromFEN': function boardFromFEN(str) {\n\t\tvar rows = str.split('/'),\n\t\t\tkinds = {\n\t\t\t\t'p': this.kinds.Pawn,\n\t\t\t\t'n': this.kinds.Knight,\n\t\t\t\t'b': this.kinds.Bishop,\n\t\t\t\t'r': this.kinds.Rook,\n\t\t\t\t'q': this.kinds.Queen,\n\t\t\t\t'k': this.kinds.King\n\t\t\t},\n\t\t\tpieces = [];\n\t\trows.forEach(function (row, r) {\n\t\t\tvar c = 0;\n\t\t\titerable(row).forEach(function (sq) {\n\t\t\t\tif (!isNaN(sq)) {\n\t\t\t\t\tc += sq |0;\n\t\t\t\t} else {\n\t\t\t\t\tpieces.push(new kinds[sq.toLowerCase()](\n\t\t\t\t\t\tsq === sq.toLowerCase() ? 'Black' : 'White',\n\t\t\t\t\t\t[r, c]\n\t\t\t\t\t));\n\t\t\t\t\tc++;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\treturn new ludorum.utils.CheckerboardFromPieces(8, 8, pieces);\n\t},\n\t\n\t// ## Heuristics ###############################################################################\n\t\n\t/** `Chess.heuristics` is a bundle of helper functions to build heuristic evaluation functions \n\tfor this game.\n\t*/\n\t'static heuristics': {\n\t\t// TODO\n\t}\t\n}); // declare Othello.\n\n// ## Initial board ################################################################################\n\n/** The initial board of Chess has the first rank of the board with the following pieces for Whites:\nRook, Knight, Bishop, Queen, King, Bishop, Knight and Rook. The next rank has 8 Pawns. Blacks have a\nsymmetrical layout on their ranks.\n*/\nChess.initialBoard = Chess.prototype.initialBoard =\n\tChess.boardFromFEN('rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR');","// See __prologue__.js\n\t'Chess Colograph ConnectFour Mancala Othello'.split(/\\s+/).forEach(function (id) {\n\t\tvar game = exports[id];\n\t\tludorum.games[id] = game;\n\t\tif (game.__SERMAT__) {\n\t\t\tgame.__SERMAT__.identifier = exports.__package__ +'.'+ game.__SERMAT__.identifier;\n\t\t\texports.__SERMAT__.include.push(game);\n\t\t}\n\t});\n\tSermat.include(exports); // Ludorum uses Sermat internally.\n\t\n\treturn exports;\n});"]}